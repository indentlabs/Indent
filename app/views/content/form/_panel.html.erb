<div id="<%= category.name %>_panel" class="row panel">

  <%# todo: break this out into a partial %>
  <% if category.name == 'gallery' %>
    <div>
      <%= render partial: 'content/form/images/edit_list', locals: { content: content } %>
    </div>
    <div>
      <h5>
        Upload more images
        <small class="grey-text">
          <% if current_user.upload_bandwidth_kb > 0 %>
            You have <%= Filesize.from("#{current_user.upload_bandwidth_kb}KB").pretty %> of bandwidth remaining.
          <% else %>
            You have no upload bandwidth remaining. Upgrade to Premium or delete some existing images for more.
          <% end %>
        </small>
      </h5>
    </div>
    <div>
      <%= render partial: 'content/form/images/upload', locals: { f: f, content: content } %>
    </div>
    <div>
      <%= link_to_add_association "upload another", f,
        :image_uploads,
        partial: 'content/form/images/upload',
        render_options: { locals: { f: f, content: content }}
      %>
    </div>
  <% end %>

  <% if category.name == 'contributors' %>
    <%= render partial: 'content/form/contributors', locals: { f: f, content: content } %>
  <% end %>

  <%
    # Do some dynamic resizing of columns based on how many columns there are
    # TODO: move this into some service or something? Dunno, doesn't belong here.
    s_width = 12
    m_width = 12
    l_width = 12
  %>

  <% category.page_fields.each do |field| %>
    <div class="col <%= "s#{s_width} m#{m_width} l#{l_width}" %>">
      <% value = field.page_field_values.find_by(page_id: @content.id) %>

      <% if field.name == 'name' %>
        <%= f.label field.name, field.label %><br />
        <%= text_area_tag "#{@content.class.content_name}[name]", content.name, class: "materialize-textarea", placeholder: 'Some name' %>

      <% elsif field.name == 'privacy' %>
        <div class="input-field">
          <%= f.label field.name, field.label %><br />
          <%= f.select field.name, [['Only visible to you', 'private'], ['Visible to anyone with the URL', 'public']] %>
          <div class="help-text">
            This setting applies to this universe and everything within it. If this universe is visible to others by URL, they will be able to click through and see the
            characters, locations, and items within this universe also.
          </div>
        </div>

      <% elsif field.name == 'private_notes' %>
        <%#
          This field is shown if and only if:
          * A user is signed in AND
            * That user is the owner of this universe, if it's a universe, or
            * That user is the owner of this content's universe, if it's content
            * That user is the owner of this content, if it's not in a universe
        %>
        <%# todo use permission services here %>
        <% if user_signed_in? && (
             (content.is_a?(Universe) && content.user == current_user) ||
             (content.respond_to?(:universe) && content.universe      && content.universe.user == current_user) ||
             (content.respond_to?(:universe) && content.universe.nil? && content.user == current_user)
           )
        %>
          <%= render 'content/form/rich_text_input', f: f, content: content, field: field %>
          <div class="help-text">
            Private notes are <em>always</em> visible to only you, even if content is made public and shared.
          </div>
        <% end %>

      <% elsif field.name == 'item_type' %>
        <% potential_item_types = t('weapon_types') + t('shield_types') + t('axe_types') + t('bow_types') +
          t('club_types') + t('flexible_weapon_types') + t('fist_weapon_types') + t('thrown_weapon_types') +
          t('polearm_types') + t('shortsword_types') + t('sword_types') + t('other_item_types')
        %>
        <%= render 'content/form/rich_text_input', f: f, content: content, field: field, autocomplete: potential_item_types %>

      <%# TODO: not make this so awful %>

      <% elsif field.name == 'skintone' %>
        <%= render 'content/form/rich_text_input', f: f, content: content, field: field, autocomplete: t('skin_tones') %>

      <% elsif field.name == 'race' %>
        <%= render 'content/form/rich_text_input', f: f, content: content, field: field, autocomplete: t('character_races') %>

      <% elsif field.name == 'eyecolor' %>
        <%= render 'content/form/rich_text_input', f: f, content: content, field: field, autocomplete: t('eye_colors') %>

      <% elsif field.name == 'haircolor' %>
        <%= render 'content/form/rich_text_input', f: f, content: content, field: field, autocomplete: t('hair_colors') %>

      <% elsif field.name == 'hairstyle' %>
        <%= render 'content/form/rich_text_input', f: f, content: content, field: field, autocomplete: t('hair_styles') %>

      <% elsif field.name == 'facialhair' %>
        <%= render 'content/form/rich_text_input', f: f, content: content, field: field, autocomplete: t('facial_hair_styles') %>

      <% elsif field.name == 'bodytype' %>
        <%= render 'content/form/rich_text_input', f: f, content: content, field: field, autocomplete: t('body_types') %>

      <% elsif field.name == 'fave_weapon' %>
        <%= render 'content/form/rich_text_input', f: f, content: content, field: field, autocomplete: t('weapon_types') + t('shield_types') + t('axe_types') + t('bow_types') +
          t('club_types') + t('flexible_weapon_types') + t('fist_weapon_types') + t('thrown_weapon_types') +
          t('polearm_types') + t('shortsword_types') + t('sword_types') %>

      <% else %>
        <%= render 'content/form/rich_text_input', f: f, content: content, field: field %>

      <% end %>

    </div>
  <% end %>

  <% if content.is_a?(Universe) || (content.respond_to?(:universe) && content.universe.present?) %>
    <div style="clear: both;"></div>
    <div style="padding: 0 20px;">
      To add additional fields to this category,
      <%= link_to 'click here', '#', class: 'new-attribute-field-link' %>
      and type <%= category.label %> as the category name.
      You can add as many fields as you like.
      Fields will attach to all <%= content.class.name.downcase.pluralize %> in this universe.
      To add multiple, simply add them one at a time.
    </div>
  <% end %>
</div>
